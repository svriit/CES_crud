name: Deploy Student CRUD Application

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy Lambda Functions
        run: |
          # Function deployment helper
          deploy_function() {
            local function_name=$1
            local handler=$2
            local zip_file=$3

            if aws lambda get-function --function-name $function_name 2>/dev/null; then
              echo "Updating existing function: $function_name"
              aws lambda update-function-code \
                --function-name $function_name \
                --zip-file fileb://$zip_file
            else
              echo "Creating new function: $function_name"
              aws lambda create-function \
                --function-name $function_name \
                --runtime python3.9 \
                --role arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/LambdaExecutionRole \
                --handler $handler \
                --zip-file fileb://$zip_file
            fi
          }

          # Create deployment packages
          cd backend/lambda_functions
          zip -r ../../add_student.zip add_student.py requirements.txt
          zip -r ../../get_students.zip get_students.py requirements.txt
          cd ../..

          # Deploy functions
          deploy_function "add_student" "add_student.lambda_handler" "add_student.zip"
          deploy_function "get_students" "get_students.lambda_handler" "get_students.zip"

      - name: Deploy Static Website
        run: |
          # Copy index.html to S3
          aws s3 cp index.html s3://${{ secrets.S3_BUCKET_NAME }}/index.html

          # Set bucket website configuration
          aws s3 website s3://${{ secrets.S3_BUCKET_NAME }} \
            --index-document index.html

          # Update bucket policy for public access
          aws s3api put-bucket-policy \
            --bucket ${{ secrets.S3_BUCKET_NAME }} \
            --policy '{
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "PublicReadGetObject",
                  "Effect": "Allow",
                  "Principal": "*",
                  "Action": "s3:GetObject",
                  "Resource": "arn:aws:s3:::'${{ secrets.S3_BUCKET_NAME }}'/*"
                }
              ]
            }'

      - name: Set CORS for API Gateway
        run: |
          aws apigateway update-cors --rest-api-id b31i1zxvcd \
            --resource-id /* \
            --patch-operations '[
              {
                "op": "replace",
                "path": "/corsConfiguration",
                "value": "{\"allowOrigins\": [\"*\"],\"allowMethods\": [\"GET\",\"POST\"],\"allowHeaders\": [\"Content-Type\"]}"
              }
            ]'

      - name: Print Deployment URLs
        run: |
          echo "Website URL: http://${{ secrets.S3_BUCKET_NAME }}.s3-website-${{ secrets.AWS_REGION }}.amazonaws.com"
          echo "Add Student API: https://b31i1zxvcd.execute-api.ap-south-1.amazonaws.com/prod/students"
          echo "Get Students API: https://fabj02e95h.execute-api.ap-south-1.amazonaws.com/prod/students"

      - name: Create Deployment Summary
        run: |
          echo "# Deployment Summary" > deployment.md
          echo "## URLs" >> deployment.md
          echo "- Website: http://${{ secrets.S3_BUCKET_NAME }}.s3-website-${{ secrets.AWS_REGION }}.amazonaws.com" >> deployment.md
          echo "- Add Student API: https://b31i1zxvcd.execute-api.ap-south-1.amazonaws.com/prod/students" >> deployment.md
          echo "- Get Students API: https://fabj02e95h.execute-api.ap-south-1.amazonaws.com/prod/students" >> deployment.md

      - name: Upload Deployment Summary
        uses: actions/upload-artifact@v4
        with:
          name: deployment-info
          path: deployment.md
          retention-days: 5
